<?php

namespace frontend\models;

use backend\models\Integrator;
use common\models\User;
use frontend\models\product\Product;
use Yii;
use yii\web\ForbiddenHttpException;

/**
 * This is the model class for table "review".
 *
 * @property int $id
 * @property int|null $created_at
 * @property string|null $title
 * @property string|null $plus
 * @property string|null $minus
 * @property string|null $total
 * @property float|null $rate_average
 * @property float|null $rate_boon
 * @property float|null $rate_func
 * @property float|null $rate_support
 * @property float|null $rate_price
 * @property int $user_id
 * @property int|null $status
 * @property int|null $product_id
 * @property int|null $integrator_id
 *
 * @property User $user
 */
class Review extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'review';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['product_id', 'integrator_id'], 'integer'],
            [['rate_average', 'rate_boon', 'rate_func', 'rate_support', 'rate_price'], 'number'],
            [['title'], 'string', 'max' => 100],
            [['plus', 'minus', 'total'], 'string', 'max' => 255],
            [['product_id'], 'exist', 'skipOnError' => true, 'targetClass' => Product::className(), 'targetAttribute' => ['product_id' => 'id']],
            [['integrator_id'], 'exist', 'skipOnError' => true, 'targetClass' => Integrator::className(), 'targetAttribute' => ['integrator_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'created_at' => 'Created At',
            'title' => 'Title',
            'plus' => 'Plus',
            'minus' => 'Minus',
            'total' => 'Total',
            'rate_average' => 'Rate Average',
            'rate_boon' => 'Rate Boon',
            'rate_func' => 'Rate Func',
            'rate_support' => 'Rate Support',
            'rate_price' => 'Rate Price',
            'user_id' => 'User ID',
            'status' => 'Status',
            'product_id' => 'Product ID',
            'integrator_id' => 'Integrator ID',
        ];
    }

    public function beforeSave($insert)
    {
        if(Yii::$app->user->isGuest)
            throw new ForbiddenHttpException("Необходима авторизация");

        if($this->isNewRecord){
            $this->user_id = Yii::$app->user->id;
            $this->created_at = time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }
}
